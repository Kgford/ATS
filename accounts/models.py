from django.db import models
from datetime import datetime

class Charge_Code(models.Model):
    id = models.AutoField(primary_key=True)
    charge_type = models.CharField("charge_type",max_length=100,null=True,unique=False,default='N/A') 
    client_id = models.IntegerField(null=True,unique=False)
    charge = models.CharField("charge code",max_length=100,null=True,unique=False,default='N/A') 
    charge_desc = models.CharField("charge_desc",max_length=100,null=True,unique=False,default='N/A') 
    start_date = models.DateField(null=True)
    end_date = models.DateField(null=True) 
    last_update = models.DateField(null=True)


class ClassCodes(models.Model):
    id = models.AutoField(primary_key=True)
    ClassCode = models.CharField("class code",max_length=50,null=True,unique=False,default='N/A') 
    InventoryClass = models.CharField("inv class",max_length=50,null=True,unique=False,default='N/A') 
    Client = models.CharField("client",max_length=50,null=True,unique=False,default='N/A') 
    last_update = models.DateField(null=True)
    backup_index = models.IntegerField(null=True,unique=False)
    
class Expenses(models.Model):
    id = models.AutoField(primary_key=True)
    vendor_id = models.CharField("vendor id",max_length=50,null=True,unique=False,default='N/A') 
    expense_type = models.CharField("expense type",max_length=50,null=True,unique=False,default='N/A') 
    expense_description = models.CharField("expense desc",max_length=355,null=True,unique=False,default='N/A') 
    sale_date = models.DateTimeField(default=datetime.now, blank=True)
    item = models.CharField("item",max_length=50,null=True,unique=False,default='N/A') 
    item_desc = models.CharField("item desc",max_length=355,null=True,unique=False,default='N/A') 
    quantity = models.CharField("quantity",max_length=50,null=True,unique=False,default='N/A') 
    item_cost = models.CharField("item cost",max_length=50,null=True,unique=False,default='N/A') 
    total_cost = models.CharField("total cost",max_length=50,null=True,unique=False,default='N/A') 
    reoccuuring_expenses = models.BooleanField("reoccuuring_expenses",unique=False,null=True,default=False)
    reoccuring_interval = models.CharField("reoccuring interval",max_length=255,null=True,unique=False,default='N/A') 
    invoice_id = models.CharField("invoiceID",max_length=255,null=True,unique=False,default='N/A') 
    operator = models.CharField("staff id",max_length=50,null=True,unique=False,default='N/A') 
    last_update = models.DateField(null=True) 
    backup_index = models.IntegerField(null=True,unique=False)
    v_insurance = models.ForeignKey('assets.Vehical', on_delete=models.CASCADE, null=True, related_name='v_insurance')
    v_inspection = models.ForeignKey('assets.Vehical', on_delete=models.CASCADE, null=True, related_name='v_inspection')
    v_fees = models.ForeignKey('assets.Vehical', on_delete=models.CASCADE, null=True, related_name='v_fees')
    v_fuel = models.ForeignKey('assets.Vehical', on_delete=models.CASCADE, null=True, related_name='v_fuel')
    v_tires = models.ForeignKey('assets.Vehical', on_delete=models.CASCADE, null=True, related_name='v_tires')
    v_oil = models.ForeignKey('assets.Vehical', on_delete=models.CASCADE, null=True, related_name='v_oil')
    v_repair = models.ForeignKey('assets.Vehical', on_delete=models.CASCADE, null=True, related_name='v_repair')
    v_maintaince = models.ForeignKey('assets.Vehical', on_delete=models.CASCADE, null=True, related_name='v_maintaince')
    v_payment = models.ForeignKey('assets.Vehical', on_delete=models.CASCADE, null=True, related_name='v_payment')
    b_insurance = models.ForeignKey('assets.Business_Space',  null=True, on_delete=models.CASCADE, related_name='b_insurance')
    b_utilities = models.ForeignKey('assets.Business_Space',  null=True, on_delete=models.CASCADE, related_name='b_power')
    b_internet = models.ForeignKey('assets.Business_Space',  null=True, on_delete=models.CASCADE, related_name='b_internet')
    b_fuel = models.ForeignKey('assets.Business_Space',  null=True, on_delete=models.CASCADE, related_name='b_fuel')
    b_phone = models.ForeignKey('assets.Business_Space',  null=True, on_delete=models.CASCADE, related_name='b_phone')
    b_repair = models.ForeignKey('assets.Business_Space',  null=True, on_delete=models.CASCADE, related_name='b_repair')
    b_mantenance = models.ForeignKey('assets.Business_Space',  null=True, on_delete=models.CASCADE, related_name='b_mantenance')
    b_payment = models.ForeignKey('assets.Business_Space',  null=True, on_delete=models.CASCADE, related_name='b_payment')
    b_tax = models.ForeignKey('assets.Business_Space',  null=True, on_delete=models.CASCADE, related_name='b_tax')
    
	
class Income(models.Model):
	id = models.AutoField(primary_key=True)
	client_id = models.IntegerField(null=True,unique=False)
	invoice_id = models.IntegerField(null=True,unique=False)
	income_type = models.CharField("expense type",max_length=50,null=True,unique=False,default='N/A') 
	income_description = models.CharField("expense desc",max_length=355,null=True,unique=False,default='N/A') 
	invoice_date = models.DateTimeField(default=datetime.now, blank=True)
	payment_date = models.DateTimeField(default=datetime.now, blank=True)
	total = models.FloatField("total",null=True,unique=False) 
	operator = models.CharField("staff id",max_length=50,null=True,unique=False,default='N/A') 
	last_update = models.DateField(null=True) 
	backup_index = models.IntegerField(null=True,unique=False)
    
class Invoice(models.Model):
    id = models.AutoField(primary_key=True)
    client_id = models.IntegerField(null=True,unique=False)
    staff_id = models.IntegerField(null=True,unique=False)
    invoice_desc = models.CharField("invoice_desc",max_length=100,null=True,unique=False,default='N/A')
    charge_code = models.CharField("resource name",max_length=100,null=True,unique=False,default='N/A')
    paid = models.BooleanField("paid",unique=False,null=True,default=False)
    invoice_date = models.DateField(null=True)
    payment_date = models.DateField(null=True)
    total = models.FloatField("total",null=True,unique=False)
    last_update = models.DateField(null=True)
    backup_index = models.IntegerField(null=True,unique=False)

class Invoice_Item(models.Model):
    id = models.AutoField(primary_key=True)
    client_id = models.IntegerField(null=True,unique=False)  
    charge_id = models.IntegerField(null=True,unique=False)  
    contractor_id = models.IntegerField(null=True,unique=False) 
    resource_type = models.CharField("resource type",max_length=100,null=True,unique=False,default='N/A')
    service_type = models.CharField("service type",max_length=100,null=True,unique=False,default='N/A')
    service_provider = models.CharField("service provider",max_length=100,null=True,unique=False,default='N/A')
    cost_type = models.CharField("cost type",max_length=100,null=True,unique=False,default='N/A')
    item_date = models.DateField(null=True)
    item_desc = models.CharField("item description",max_length=100,null=True,unique=False,default='N/A')
    rate = models.FloatField("rate",null=True,unique=False)
    quantity = models.FloatField(null=True,unique=False)   
    total = models.FloatField("total",null=True,unique=False)
    active = models.BooleanField("active",unique=False,null=True,default=True)
    last_update = models.DateField(null=True)	
    invoice_id = models.IntegerField(null=True,unique=False)
    
        
class Quote(models.Model):
    id = models.AutoField(primary_key=True)
    client_id = models.IntegerField(null=True,unique=False)
    staff_id = models.IntegerField(null=True,unique=False)
    invoice_desc = models.CharField("invoice_desc",max_length=100,null=True,unique=False,default='N/A')
    charge_code = models.CharField("resource name",max_length=100,null=True,unique=False,default='N/A')
    paid = models.BooleanField("paid",unique=False,null=True,default=False)
    quote_date = models.DateField(null=True)
    payment_date = models.DateField(null=True)
    total = models.FloatField("total",null=True,unique=False)
    last_update = models.DateField(null=True)
    backup_index = models.IntegerField(null=True,unique=False)

class Quote_Item(models.Model):
    id = models.AutoField(primary_key=True)
    client_id = models.IntegerField(null=True,unique=False)  
    charge_id = models.IntegerField(null=True,unique=False)  
    contractor_id = models.IntegerField(null=True,unique=False) 
    resource_type = models.CharField("resource type",max_length=100,null=True,unique=False,default='N/A')
    service_type = models.CharField("service type",max_length=100,null=True,unique=False,default='N/A')
    service_provider = models.CharField("service provider",max_length=100,null=True,unique=False,default='N/A')
    cost_type = models.CharField("cost type",max_length=100,null=True,unique=False,default='N/A')
    item_date = models.DateField(null=True)
    item_desc = models.CharField("item description",max_length=100,null=True,unique=False,default='N/A')
    rate = models.FloatField("rate",null=True,unique=False)
    quantity = models.FloatField(null=True,unique=False)   
    total = models.FloatField("total",null=True,unique=False)
    active = models.BooleanField("active",unique=False,null=True,default=True)
    last_update = models.DateField(null=True)	
    invoice_id = models.IntegerField(null=True,unique=False)
